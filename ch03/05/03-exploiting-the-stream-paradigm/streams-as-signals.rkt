#lang sicp

(#%require "../../../common/data/stream.rkt")

;; streamlike integral calculations
;; consider we have an input stream x = (xi), the integral should be
;; Sum as belowing:
;; Si= C + ∑_{j=1^i} x_j dt
;; which means, it's C + (x1+..xi)dt
;;
;; 这里的操作和前面的 guess 如出一辙
;; 由于每一个 Si 的结果其实都是上一个 Si-1 + xjdt 形成的
;; 我们只需要将上一个 integral 的结果和当前的 integrand 的结果相加即可
;; 这就自然就是 add-stream
(define (integral integrand initial-value dt)
  (define int
    (cons-stream initial-value
                 (add-stream (scale-stream integrand dt)
                             int)))
  int)

(stream-refs 10 (integral integers 3 1))
